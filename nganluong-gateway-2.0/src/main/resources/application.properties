# ==============================================================
# = Data Source
# ==============================================================
#Dev
#spring.datasource.url = jdbc:mysql://localhost:3306/gateway?verifyServerCertificate=false&useSSL=false
#spring.datasource.username = dev
#spring.datasource.password = deha@2020
#Sandbox
#spring.datasource.url=jdbc:mysql://10.1.100.171:3306/pg2?verifyServerCertificate=false&useSSL=false&useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.username=mappv
#spring.datasource.password=TPiA123xBf;EFU!PBcV

#Live
spring.datasource.url=jdbc:mysql://localhost:3306/pg2?verifyServerCertificate=false&useSSL=false&useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username=gateway2
spring.datasource.password=s123N8jg425zO@
#Hikari setup
spring.datasource.hikari.minimumIdle=30
spring.datasource.hikari.maximumPoolSize=300
spring.datasource.hikari.idleTimeout=60000
spring.datasource.hikari.poolName=GatewayHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=60000
#spring.datasource.url = jdbc:mysql://localhost:3310/pg2?verifyServerCertificate=false&useSSL=false
#spring.datasource.username = haind
#spring.datasource.password = Ky60NryS9eu^
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp
#spring.mvc.static-path-pattern=/resources/**
# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql=false
# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto=none
# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#Open the second level cache
#spring.jpa.properties.hibernate.cache.use_second_level_cache=false
## Query Cache
#spring.jpa.properties.hibernate.cache.use_query_cache=true
#spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
#spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE  
#net.sf.ehcache.configurationResourceName=ehcache/ehcache-in-memory.xml
# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always
#logging.level.org.springframework.security=DEBUG
#logging.file=/data/tomcat3/log/spring-boot-elk.log
#logging.file=C:/elk/spring-boot-elk.log
log4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector